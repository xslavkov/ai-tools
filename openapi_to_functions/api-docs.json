{
    "openapi": "3.0.0",
    "paths": {
        "/api/public/v1/groups/{groupId}/jobs": {
            "get": {
                "operationId": "JobController_findAll",
                "summary": "Find all jobs for group",
                "parameters": [
                    {
                        "name": "groupId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/JobDto"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "jobs"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "operationId": "JobController_create",
                "summary": "Create job",
                "parameters": [
                    {
                        "name": "groupId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateJobDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "jobs"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/jobs/{jobId}/runs": {
            "post": {
                "operationId": "JobController_run",
                "summary": "Run job",
                "parameters": [
                    {
                        "name": "jobId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Job run"
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "jobs"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "JobController_deleteRun",
                "summary": "Delete last x job runs",
                "parameters": [
                    {
                        "name": "jobId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "history",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "",
                        "required": true,
                        "in": "query",
                        "description": "history",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "jobs"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/codelists/i18n/{app}/{lang}": {
            "get": {
                "operationId": "I18nController_getTranslations",
                "summary": "Get translations.",
                "parameters": [
                    {
                        "name": "app",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "enum": [
                                "app-mobile",
                                "server"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "lang",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "enum": [
                                "en",
                                "sk",
                                "cs",
                                "de",
                                "it"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "section",
                        "required": false,
                        "in": "query",
                        "description": "Get only first level section of translation file content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "required": false,
                        "in": "query",
                        "description": "Version of translation file",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Translation json"
                    },
                    "404": {
                        "description": "I18n file note found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundException"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "codelists"
                ]
            }
        },
        "/api/public/v1/codelists/countries": {
            "get": {
                "operationId": "I18nController_getCountryCodelist",
                "summary": "Get country codelist",
                "parameters": [
                    {
                        "name": "flag",
                        "required": false,
                        "in": "query",
                        "description": "Country flag (not implemented yet)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "currency",
                        "required": false,
                        "in": "query",
                        "description": "Country currency name",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "symbol",
                        "required": false,
                        "in": "query",
                        "description": "Country currency symbol",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "phone",
                        "required": false,
                        "in": "query",
                        "description": "Country phone prefix",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "code",
                        "required": false,
                        "in": "query",
                        "description": "Country code",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "Country name",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Country object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountryDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "codelists"
                ]
            }
        },
        "/api/public/v1/onboarding/user": {
            "post": {
                "operationId": "OnboardingController_createUser",
                "summary": "Create new user",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserReqDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateUserResDto"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User with given email already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "onboarding"
                ]
            },
            "put": {
                "operationId": "OnboardingController_updateUser",
                "summary": "Update user properties within onboarding flow",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserReqDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateUserResDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "onboarding"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "get": {
                "operationId": "OnboardingController_verifyUser",
                "summary": "Verify user",
                "parameters": [
                    {
                        "name": "token",
                        "required": true,
                        "in": "query",
                        "description": "Token from verification email",
                        "schema": {}
                    }
                ],
                "responses": {
                    "308": {
                        "description": "User successfully verified. Redirect to app."
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "onboarding"
                ]
            }
        },
        "/api/public/v1/onboarding/phone": {
            "post": {
                "operationId": "OnboardingController_createPhone",
                "summary": "Create new phone",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePhoneReqDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Phone successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePhoneResDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorDto"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Phone with given number already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "onboarding"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "patch": {
                "operationId": "OnboardingController_updatePhone",
                "summary": "Update user's phone",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePhoneReqDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Phone successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePhoneResDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorDto"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Phone with given number already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "onboarding"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "operationId": "OnboardingController_verifyPhone",
                "summary": "Verify phone and send extra data",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyPhoneReqDto"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Phone successfully verified. Phone should be active from now."
                    },
                    "404": {
                        "description": "OTP not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorDto"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "OTP already verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "onboarding"
                ]
            }
        },
        "/api/public/v1/onboarding/status": {
            "get": {
                "operationId": "OnboardingController_getOnboardingStatus",
                "summary": "Gets onboarding status",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Onboarding status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetOnboardingStatusResDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "onboarding"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/onboarding/invites": {
            "post": {
                "operationId": "OnboardingController_inviteCompany",
                "summary": "Invite company",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SuggestCompanyDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Invite sent"
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "onboarding"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/users/{userId}/parking-cards": {
            "get": {
                "operationId": "ParkingCardController_getUserParkingCards",
                "summary": "Get all user parking cards ",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ParkingCardMappingDto"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users / parking-cards"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "operationId": "ParkingCardController_createParkingCard",
                "summary": "Create parking card",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateParkingCardMappingDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParkingCardMappingDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "parking card not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorDto"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "parking card mapping already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users / parking-cards"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/users/{userId}/parking-cards/{cardId}": {
            "get": {
                "operationId": "ParkingCardController_getParkingCardDetail",
                "summary": "Get parking card detail",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "cardId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Parking card not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParkingCardMappingDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users / parking-cards"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "operationId": "ParkingCardController_editParkingCard",
                "summary": "Edit parking card",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "cardId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCardMappingDto"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "parking card not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorDto"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "parking card mapping already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParkingCardMappingDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users / parking-cards"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "ParkingCardController_deleteParkingCard",
                "summary": "Delete parking card",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "cardId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "parking card not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users / parking-cards"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/codelists/parking-card-types": {
            "get": {
                "operationId": "ParkingCardCodelistsController_getVehicleTypes",
                "summary": "Get parking type codelist values.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of parking types"
                    }
                },
                "tags": [
                    "codelists"
                ]
            }
        },
        "/api/public/v1/users/{userId}/vehicles": {
            "post": {
                "operationId": "VehicleController_create",
                "summary": "Create user vehicle",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateVehicleDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "vehicles"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "get": {
                "operationId": "VehicleController_findAllUserVehicles",
                "summary": "Find all user vehicles",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VehicleDto"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "vehicles"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/groups/{groupId}/vehicles": {
            "get": {
                "operationId": "VehicleController_findAllGroupVehicles",
                "summary": "Find all group vehicles",
                "parameters": [
                    {
                        "name": "groupId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "pageSize",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "userId",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "searchText",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vehicleType",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "engineType",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VehicleDto"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "vehicles"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/users/{userId}/vehicles/{vehicleId}": {
            "put": {
                "operationId": "VehicleController_update",
                "summary": "Update user vehicle",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "vehicleId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "vehicles"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "VehicleController_remove",
                "summary": "Remove vehicle",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "vehicleId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not user' vehicle"
                    },
                    "404": {
                        "description": "Vehicle not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorDto"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Vehicle already used",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "vehicles"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "get": {
                "operationId": "VehicleController_get",
                "summary": "Get vehicle",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "vehicleId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "vehicles"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/codelists/vehicle-types": {
            "get": {
                "operationId": "VehicleCodelistsController_getVehicleTypes",
                "summary": "Get vehicle type codelist values.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of vehicle types"
                    }
                },
                "tags": [
                    "codelists"
                ]
            }
        },
        "/api/public/v1/codelists/engine-types": {
            "get": {
                "operationId": "VehicleCodelistsController_getEngineTypes",
                "summary": "Get engine type codelist values.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of engine types"
                    }
                },
                "tags": [
                    "codelists"
                ]
            }
        },
        "/api/public/v1/users/{userId}/slots": {
            "get": {
                "operationId": "SlotController_getUserSlots",
                "summary": "Get all user slots ",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SlotDetailDto"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "slots"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "operationId": "SlotController_createSlot",
                "summary": "Create and register slot",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSlotReqDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlotDetailDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Slot already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "slots"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/users/{userId}/slots/{slotId}": {
            "get": {
                "operationId": "SlotController_getSlotDetail",
                "summary": "Get slot detail",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "slotId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlotDetailDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "spot not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "slots"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "patch": {
                "operationId": "SlotController_editSlot",
                "summary": "Edit slot name or serialNumber",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "slotId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSlotReqDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateSlotReqDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Slot not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "slots"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "SlotController_deleteSpot",
                "summary": "Delete spot",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "slotId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successully deleted"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Spot not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "slots"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/allocations": {
            "post": {
                "operationId": "AllocationController_create",
                "summary": "Run allocation mechanism",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AllocationReqDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "allocations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/allocations/sandbox": {
            "get": {
                "operationId": "AllocationController_sadnbox",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "allocations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/groups/{groupId}/lots/{lotId}/allocation-rules": {
            "get": {
                "operationId": "AllocationRuleController_get",
                "summary": "Get allocation rule",
                "parameters": [
                    {
                        "name": "groupId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lotId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Allocation rules",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AllocationRuleDto"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lots / allocation-rules"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "operationId": "AllocationRuleController_create",
                "summary": "Create allocation rule",
                "parameters": [
                    {
                        "name": "groupId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lotId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAllocationRuleDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rule successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AllocationRuleDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lots / allocation-rules"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/groups/{groupId}/lots/{lotId}/allocation-rules/{ruleId}": {
            "put": {
                "operationId": "AllocationRuleController_update",
                "summary": "Update allocation rule",
                "parameters": [
                    {
                        "name": "groupId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lotId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "ruleId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AllocationRuleDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AllocationRuleDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lots / allocation-rules"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "AllocationRuleController_delete",
                "summary": "Delete allocation rule",
                "parameters": [
                    {
                        "name": "groupId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lotId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "ruleId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted."
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lots / allocation-rules"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/events/enable-parking-session": {
            "post": {
                "operationId": "SessionController_enableParkingSession",
                "summary": "Enable parking session occupancy",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnableParkingSessionOccupancyReqDto"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Enabled"
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "events"
                ]
            }
        },
        "/api/public/v1/search/sessions": {
            "get": {
                "operationId": "SessionSearchController_findCompanySessions",
                "summary": "Slot sessions",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "pageSize",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "intervalIn",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "intervalFrom",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "intervalTo",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "slotIds",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "licencePlates",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "permitCards",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "explicitlyAllowed",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SessionTableDto"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "search"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/users/{userId}/reservations/arounds": {
            "post": {
                "operationId": "ReservationController_createParkingAround",
                "summary": "Create parking around reservation",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateReservationReqDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationDetailDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users / reservations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/users/{userId}/reservations/instants": {
            "post": {
                "operationId": "ReservationController_createIntantParking",
                "summary": "Create instant reservation",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateReservationReqDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationDetailDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested block is no longer available to reservation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users / reservations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/users/{userId}/reservations/requests": {
            "post": {
                "operationId": "ReservationController_createRequest",
                "summary": "Create reservation request",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRequestsReqDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested user block is no longer available to reservation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users / reservations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/users/{userId}/reservations/invitations": {
            "post": {
                "operationId": "ReservationController_createInvite",
                "summary": "Create reservation request as invitation",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateReservationInvitationDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested user block is no longer available to reservation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users / reservations"
                ],
                "security": [
                    {
                        "bearer": []
                    },
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/users/{userId}/reservations/streets": {
            "post": {
                "operationId": "ReservationController_createStreetParking",
                "summary": "Create street reservation",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateReservationReqDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationDetailDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users / reservations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/users/{userId}/reservations/sandbox/{id}": {
            "get": {
                "operationId": "ReservationController_sandbox",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users / reservations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/users/{userId}/reservations": {
            "get": {
                "operationId": "ReservationController_findAll",
                "summary": "Find all reservations",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "type",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "enum": [
                                "ongoing",
                                "findAll",
                                "findOne"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "lotId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "id",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "statuses",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "flows",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "licencePlate",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "history",
                        "required": false,
                        "in": "query",
                        "description": "Find only historical records",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "withDeleted",
                        "required": false,
                        "in": "query",
                        "description": "Include deleted records",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "relations",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "tz",
                        "required": false,
                        "in": "query",
                        "description": "Explicit timezone",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReservationDetailDto"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users / reservations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/users/{userId}/reservations/{reservationId}/extend-blocks": {
            "get": {
                "operationId": "ReservationController_getExtendBlocks",
                "summary": "Find blocks for extending reservations",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "reservationId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users / reservations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/users/{userId}/reservations/{reservationId}": {
            "patch": {
                "operationId": "ReservationController_updateReservation",
                "summary": "Update reservation",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "reservationId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateReservationReqDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationDetailDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users / reservations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "ReservationController_release",
                "summary": "Release reservation",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "reservationId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "flow",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "enum": [
                                "PORTAL",
                                "APP_MOBILE",
                                "ALLOCATION",
                                "PAYMENT_FAILED",
                                "PAYMENT_EXPIRED",
                                "INVITATION_DECLINED",
                                "ALLOCATION_DECLINED",
                                "MISSING_SESSION_REMINDER",
                                "ADMIN",
                                "BATCH",
                                "BACK_BUTTON",
                                "EXPIRATION"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "mode",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "enum": [
                                "reservation",
                                "slot"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users / reservations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "get": {
                "operationId": "ReservationController_get",
                "summary": "Get reservation",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "reservationId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationDetailDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Reservation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users / reservations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/users/{userId}/reservations/{reservationId}/changes": {
            "post": {
                "operationId": "ReservationController_commitReservationChanges",
                "summary": "Commit reservation change changes",
                "parameters": [
                    {
                        "name": "reservationId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users / reservations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "ReservationController_rollbackReservationChanges",
                "summary": "Rollback reservation change changes",
                "parameters": [
                    {
                        "name": "reservationId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users / reservations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/users/{userId}/reservations/gate/{reservationId}": {
            "patch": {
                "operationId": "ReservationController_reactivate",
                "summary": "Re-activate reservation",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "reservationId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Reservation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users / reservations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/users/{userId}/reservations/{reservationId}/updates": {
            "delete": {
                "operationId": "ReservationController_resetChanges",
                "summary": "Reset pending changes over reservation",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "reservationId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users / reservations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/groups/{groupId}/lots/{lotId}/reservation-rules": {
            "post": {
                "operationId": "ReservationRuleController_create",
                "summary": "Create reservation rule",
                "parameters": [
                    {
                        "name": "groupId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lotId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateReservationRuleDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rule successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationRuleDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lots / reservation-rules"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/groups/{groupId}/lots/{lotId}/reservation-rules/{ruleId}": {
            "put": {
                "operationId": "ReservationRuleController_update",
                "summary": "Update reservation rule",
                "parameters": [
                    {
                        "name": "groupId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lotId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "ruleId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReservationRuleDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationRuleDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lots / reservation-rules"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "ReservationRuleController_delete",
                "summary": "Delete reservation rule",
                "parameters": [
                    {
                        "name": "groupId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lotId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "ruleId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted."
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lots / reservation-rules"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/groups/{groupId}/codelists/reservation-rules-list": {
            "get": {
                "operationId": "ReservationConversionsController_getReservatuinRulesList",
                "summary": "Get reservation rules as a list.",
                "parameters": [
                    {
                        "name": "groupId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lotId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "zoneId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "slotId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "userId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservation rules as a list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "codelists"
                ]
            }
        },
        "/api/public/v1/groups/{groupId}/codelists/reservation-rules": {
            "get": {
                "operationId": "ReservationConversionsController_getReservatuinRules",
                "summary": "Get reservation rules.",
                "parameters": [
                    {
                        "name": "groupId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lotId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "zoneId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "slotId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservation rules",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationRuleCombinedDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "codelists"
                ]
            }
        },
        "/api/public/v1/reservation-invitations/accept": {
            "get": {
                "operationId": "ReservationInvitationsController_accept",
                "summary": "Accept invitation",
                "parameters": [
                    {
                        "name": "token",
                        "required": true,
                        "in": "query",
                        "description": "token from invitation email",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invitation accepted. User should be redirected to APP landing page."
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "invitations"
                ]
            }
        },
        "/api/public/v1/reservation-invitations/decline": {
            "get": {
                "operationId": "ReservationInvitationsController_decline",
                "summary": "Verified invitation",
                "parameters": [
                    {
                        "name": "token",
                        "required": true,
                        "in": "query",
                        "description": "token from invitation email",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invitation verified. User should be redirected to APP landing page."
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "invitations"
                ]
            }
        },
        "/api/public/v1/search/reservations/table": {
            "get": {
                "operationId": "ReservationSearchController_findReservationsTable",
                "summary": "Find all reservations for portal",
                "parameters": [
                    {
                        "name": "type",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "enum": [
                                "userReservations",
                                "groupReservations",
                                "findByIds"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "pageSize",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "groupId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "userId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "intervalIn",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "intervalFrom",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "intervalTo",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "status",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "lotId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "slotIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "licencePlate",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "invitationsOnly",
                        "required": false,
                        "in": "query",
                        "description": "Find only invitation records",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "deleted",
                        "required": false,
                        "in": "query",
                        "description": "Include deleted records",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "searchText",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "templateIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "tz",
                        "required": false,
                        "in": "query",
                        "description": "Explicit timezone",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReservationTableDto"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "search"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/search/reservations": {
            "get": {
                "operationId": "ReservationSearchController_findReservations",
                "summary": "Find all reservations for portal",
                "parameters": [
                    {
                        "name": "type",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "enum": [
                                "userReservations",
                                "groupReservations",
                                "findByIds"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "ids",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "userId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lotId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "status",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "flow",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "relation",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "history",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "withDeleted",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "licencePlate",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tz",
                        "required": false,
                        "in": "query",
                        "description": "Explicit timezone",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReservationTableDto"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "search"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/reservation-sessions": {
            "patch": {
                "operationId": "ReservationSessionSearchController_pairReservationSessions",
                "summary": "Pair reservation sessions",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateReservationSessionDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReservationSessionCountsResDto"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "reservation-sessions"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "get": {
                "operationId": "ReservationSessionSearchController_findReservationSessions",
                "summary": "Find reservation sessions",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "example": 1,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "pageSize",
                        "required": false,
                        "in": "query",
                        "example": 20,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "groupIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "userIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "intervalFrom",
                        "required": true,
                        "in": "query",
                        "example": "2024-06-19T19:24:52.256+00:00",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "intervalTo",
                        "required": true,
                        "in": "query",
                        "example": "2024-06-26T19:24:52.257+00:00",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reservationIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "sessionIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "lotIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "slotIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "statuses",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "usedInterval",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReservationSessionResDto"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "reservation-sessions"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/reservation-sessions/unpaired-counts": {
            "get": {
                "operationId": "ReservationSessionSearchController_getUnpairedCounts",
                "summary": "Get unpaired reservation sessions counts",
                "parameters": [
                    {
                        "name": "intervalFrom",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "intervalTo",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lotIds",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "slotIds",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "userIds",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "groupIds",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "reservationIds",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sessionIds",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "statuses",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "reservation-sessions"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/reservation-sessions/counts": {
            "get": {
                "operationId": "ReservationSessionSearchController_findReservationSessionsCounts",
                "summary": "Find reservation sessions counts",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "example": 1,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "pageSize",
                        "required": false,
                        "in": "query",
                        "example": 20,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "userId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "intervalFrom",
                        "required": true,
                        "in": "query",
                        "example": "2024-06-19T19:24:52.249+00:00",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "intervalTo",
                        "required": true,
                        "in": "query",
                        "example": "2024-06-26T19:24:52.256+00:00",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reservationId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "sessionId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "lotId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "slotId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "status",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReservationSessionCountsResDto"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "reservation-sessions"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/users/{userId}/reservations/{reservationId}/payments": {
            "post": {
                "operationId": "ReservationPaymentController_create",
                "summary": "Initiate reservation payment flow",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "reservationId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentOptionDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePaymentResDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "payments"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/batch/reservations/batch": {
            "delete": {
                "operationId": "ReservationBatchController_batchRelease",
                "summary": "Batch release reservations from list",
                "parameters": [
                    {
                        "name": "reservationIds",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "flow",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "enum": [
                                "PORTAL",
                                "APP_MOBILE",
                                "ALLOCATION",
                                "PAYMENT_FAILED",
                                "PAYMENT_EXPIRED",
                                "INVITATION_DECLINED",
                                "ALLOCATION_DECLINED",
                                "MISSING_SESSION_REMINDER",
                                "ADMIN",
                                "BATCH",
                                "BACK_BUTTON",
                                "EXPIRATION"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "batch / reservations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/batch/reservations/sandbox": {
            "get": {
                "operationId": "ReservationBatchController_sandbox",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "batch / reservations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/users/{userId}/deposits": {
            "post": {
                "operationId": "PaymentController_makeDeposit",
                "summary": "Create deposit",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MakeDepositReqDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Deposit successfull"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "payments"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "get": {
                "operationId": "PaymentController_getDepositHistory",
                "summary": "Get deposit history",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deposit history",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DepositHistoryDto"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "payments"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/groups/{groupId}/codelists/deposit-conversions": {
            "get": {
                "operationId": "DepositConversionsController_getDepositConversions",
                "summary": "Get deposit conversions codelist values.",
                "parameters": [
                    {
                        "name": "groupId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available conversions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DepositConversionDto"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "codelists"
                ]
            },
            "post": {
                "operationId": "DepositConversionsController_createDepositConversions",
                "summary": "Create deposit conversion.",
                "parameters": [
                    {
                        "name": "groupId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateDepositConversionDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created deposit conversion detail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepositConversionDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "codelists"
                ]
            }
        },
        "/api/public/v1/groups/{groupId}/codelists/deposit-conversions/{id}": {
            "put": {
                "operationId": "DepositConversionsController_updateDepositConversions",
                "summary": "Update deposit conversion.",
                "parameters": [
                    {
                        "name": "groupId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateDepositConversionDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated deposit conversion detail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepositConversionDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "codelists"
                ]
            },
            "delete": {
                "operationId": "DepositConversionsController_deleteDepositConversion",
                "summary": "Delete deposit conversion.",
                "parameters": [
                    {
                        "name": "groupId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                },
                "tags": [
                    "codelists"
                ]
            }
        },
        "/api/public/v1/sharings/{sharingId}/pricing-rules": {
            "get": {
                "operationId": "PricingController_get",
                "summary": "Get pricing rule",
                "parameters": [
                    {
                        "name": "sharing",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pricing rules",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PricingRuleDto"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "pricing / rules"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "operationId": "PricingController_create",
                "summary": "Create pricing rule",
                "parameters": [
                    {
                        "name": "sharing",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePricingRuleDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rule successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PricingRuleDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "pricing / rules"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/sharings/{sharingId}/pricing-rules/{ruleId}": {
            "put": {
                "operationId": "PricingController_update",
                "summary": "Update pricing rule",
                "parameters": [
                    {
                        "name": "sharing",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "ruleId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PricingRuleDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PricingRuleDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "pricing / rules"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "PricingController_delete",
                "summary": "Delete pricing rule",
                "parameters": [
                    {
                        "name": "sharing",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "ruleId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted."
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "pricing / rules"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/search/slots/sharings": {
            "get": {
                "operationId": "SlotSharingTemplateController_findSlotSharingTemplates",
                "summary": "Find block templates",
                "parameters": [
                    {
                        "name": "type",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "enum": [
                                "tenants",
                                "owner",
                                "private",
                                "public",
                                "exact"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lotId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "ownerId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lotIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "floorIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "zoneIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "slotIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "groupIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "date",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    {
                        "name": "intervalType",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "enum": [
                                "date",
                                "datetime"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "intervalFrom",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    {
                        "name": "intervalTo",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "format": "date-time",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CreateSlotSharingTemplateResDto"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lots"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/users/{userId}/slot-blocks/templates": {
            "post": {
                "operationId": "SlotSharingTemplateController_createSloTemplate2",
                "summary": "Create parking bloc template for slot ",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSlotSharingTemplateReqDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateSlotSharingTemplateResDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lots"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/users/{userId}/slot-blocks/templates/{templateId}": {
            "delete": {
                "operationId": "SlotSharingTemplateController_invalidateSlotTemplate2",
                "summary": "Invalidate template ",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "templateId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lots"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/health": {
            "get": {
                "operationId": "HealthController_check",
                "summary": "DB and service healthcheck",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "503": {
                        "description": "The Health Check is not successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "info": {
                                            "type": "object",
                                            "example": {
                                                "database": {
                                                    "status": "up"
                                                }
                                            },
                                            "additionalProperties": {
                                                "type": "object",
                                                "required": [
                                                    "status"
                                                ],
                                                "properties": {
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": true
                                            },
                                            "nullable": true
                                        },
                                        "error": {
                                            "type": "object",
                                            "example": {
                                                "redis": {
                                                    "status": "down",
                                                    "message": "Could not connect"
                                                }
                                            },
                                            "additionalProperties": {
                                                "type": "object",
                                                "required": [
                                                    "status"
                                                ],
                                                "properties": {
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": true
                                            },
                                            "nullable": true
                                        },
                                        "details": {
                                            "type": "object",
                                            "example": {
                                                "database": {
                                                    "status": "up"
                                                },
                                                "redis": {
                                                    "status": "down",
                                                    "message": "Could not connect"
                                                }
                                            },
                                            "additionalProperties": {
                                                "type": "object",
                                                "required": [
                                                    "status"
                                                ],
                                                "properties": {
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "health"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/users/{userId}/slot-blocks": {
            "get": {
                "operationId": "SearchController_search",
                "summary": "Search for slot sharings",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Search string. Searches in parking lot name and address",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "from",
                        "required": false,
                        "in": "query",
                        "description": "Search from date as ISO string",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "required": false,
                        "in": "query",
                        "description": "applies to all sharings if no type specified, otherwise applies to specific type sharings",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "pageFrom",
                        "required": false,
                        "in": "query",
                        "description": "last lot name from previous search ... for endless scroll",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "required": false,
                        "in": "query",
                        "description": "if specified only particular list is retrieved and pageSize is considered",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "required": false,
                        "in": "query",
                        "description": "Location for nearby sharings to be returned in \"latitude:longitude:radius\" format, radius (in metres) can be omited",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FindParkingBlocksResDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "search"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/search": {
            "get": {
                "operationId": "SearchController_searchNe",
                "summary": "Search for parking lots",
                "parameters": [
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Search string. Searches in parking lot name and address",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "required": false,
                        "in": "query",
                        "description": "applies to all sharings if no type specified, otherwise applies to specific type sharings",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "pageFrom",
                        "required": false,
                        "in": "query",
                        "description": "last lot name from previous search ... for endless scroll",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "required": false,
                        "in": "query",
                        "description": "if specified only particular list is retrieved and pageSize is considered",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "required": false,
                        "in": "query",
                        "description": "Location for nearby sharings to be returned in \"latitude:longitude:radius\" format, radius (in metres) can be omited",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tags",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "engineType",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "vehicleType",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "lotType",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "priceFrom",
                        "required": false,
                        "in": "query",
                        "description": "int, 120 == 1 euro 20 cents",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "priceTo",
                        "required": false,
                        "in": "query",
                        "description": "int, 120 == 1 euro 20 cents",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "intervalFrom",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "intervalTo",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "duration",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FindParkingBlocksResDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "search"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/search/filters": {
            "get": {
                "operationId": "SearchController_filterOptions",
                "summary": "Lot search filter options",
                "parameters": [
                    {
                        "name": "lotIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchFilterOptionsDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "search"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/instant-parkings": {
            "get": {
                "operationId": "ParkController_getDetail",
                "summary": "Get parking detail",
                "parameters": [
                    {
                        "name": "code",
                        "required": false,
                        "in": "query",
                        "description": "Code from QR",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lotId",
                        "required": false,
                        "in": "query",
                        "description": "Lot id",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "instant-parkings"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/instants": {
            "get": {
                "operationId": "ParkController_getParkingLotDetail",
                "summary": "Get parking detail",
                "parameters": [
                    {
                        "name": "code",
                        "required": false,
                        "in": "query",
                        "description": "Code from QR",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lotId",
                        "required": false,
                        "in": "query",
                        "description": "Lot id",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "instant-parkings"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/instants/reservations": {
            "post": {
                "operationId": "ParkController_create",
                "summary": "Create instant parking for anonymous user",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateReservationReqDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reservation"
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "instant-parkings"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "get": {
                "operationId": "ParkController_getReservation",
                "summary": "Get reservation for anonymous user",
                "parameters": [
                    {
                        "name": "type",
                        "required": true,
                        "in": "query",
                        "description": "Filter type",
                        "schema": {
                            "enum": [
                                "userReservations",
                                "groupReservations",
                                "findByIds"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "required": false,
                        "in": "query",
                        "description": "Reservation id",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "licencePlate",
                        "required": false,
                        "in": "query",
                        "description": "Licence plate",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lotId",
                        "required": false,
                        "in": "query",
                        "description": "Lot id",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationDetailDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "instant-parkings"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/instants/reservations/{reservationId}": {
            "get": {
                "operationId": "ParkController_getReservationExtendDetail",
                "summary": "Get extend reservation detail",
                "parameters": [
                    {
                        "name": "reservationId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "instant-parkings"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "patch": {
                "operationId": "ParkController_update",
                "summary": "Update reservation for anonymous user",
                "parameters": [
                    {
                        "name": "reservationId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateReservationReqDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reservation"
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "instant-parkings"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "ParkController_release",
                "summary": "Delete reservation for anonymous user",
                "parameters": [
                    {
                        "name": "reservationId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservation"
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "instant-parkings"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/instants/reservations/{reservationId}/requests": {
            "patch": {
                "operationId": "ParkController_updateRequests",
                "summary": "update reservation requests",
                "parameters": [
                    {
                        "name": "reservationId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateReservationRequestDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reservation"
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "instant-parkings"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/instants/reservations/{reservationId}/checkouts": {
            "get": {
                "operationId": "ParkController_checkout",
                "summary": "Checkout reservation",
                "parameters": [
                    {
                        "name": "reservationId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lang",
                        "required": false,
                        "in": "query",
                        "description": "Language",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservation"
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "instant-parkings"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/instants/reservations/{reservationId}/tickets/{userId}": {
            "get": {
                "operationId": "ParkController_getTicket",
                "summary": "Get reservation ticket",
                "parameters": [
                    {
                        "name": "reservationId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservation ticket"
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "instant-parkings"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/groups/{groupId}/incident-rules": {
            "get": {
                "operationId": "IncidentRuleController_get",
                "summary": "Get incident rules",
                "parameters": [
                    {
                        "name": "groupId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Incident rules",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IncidentRuleDto"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "incidents"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "operationId": "IncidentRuleController_create",
                "summary": "Create incident rule",
                "parameters": [
                    {
                        "name": "groupId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateIncidentRuleDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rule successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IncidentRuleDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "incidents"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/groups/{groupId}/incident-rules/{ruleId}": {
            "put": {
                "operationId": "IncidentRuleController_update",
                "summary": "Update incident rule",
                "parameters": [
                    {
                        "name": "groupId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "ruleId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IncidentRuleDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IncidentRuleDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "incidents"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "IncidentRuleController_delete",
                "summary": "Delete incident rule",
                "parameters": [
                    {
                        "name": "groupId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "ruleId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted."
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "incidents"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/incidents": {
            "get": {
                "operationId": "IncidentSearchController_findAll",
                "summary": "Find all incidents",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "pageSize",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "intervalFrom",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "intervalTo",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "names",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "groupId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "userId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lotId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "searchText",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IncidentTableDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "incidents"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/groups/{groupId}/incidents": {
            "get": {
                "operationId": "IncidentSearchController_findAllForGroup",
                "summary": "Find all incidents",
                "parameters": [
                    {
                        "name": "groupId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "pageSize",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "intervalFrom",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "intervalTo",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "names",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "userId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lotId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "searchText",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IncidentTableDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "incidents"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/companies/{companyId}/statistics/occupancy": {
            "get": {
                "operationId": "StatisticsController_getOccupancyStatistics",
                "summary": "Get reservation statistcs",
                "parameters": [
                    {
                        "name": "companyId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lots",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "slots",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "users",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "dateIntervalFrom",
                        "required": true,
                        "in": "query",
                        "description": "yyyy-mm-dd format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateIntervalTo",
                        "required": true,
                        "in": "query",
                        "description": "yyyy-mm-dd format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timeIntervalFromTime",
                        "required": true,
                        "in": "query",
                        "description": "hh:mm format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timeIntervalToTime",
                        "required": true,
                        "in": "query",
                        "description": "hh:mm format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeIllegalSessions",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "sessionsGroupBy",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "enum": [
                                "reservation",
                                "session"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "companies / statistics"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/companies/{companyId}/statistics/reservation-histogram": {
            "get": {
                "operationId": "StatisticsController_getReservationHistogramStats",
                "summary": "Get reservation histogram statistcs",
                "parameters": [
                    {
                        "name": "companyId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lots",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "slots",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "granularity",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "dateIntervalFrom",
                        "required": true,
                        "in": "query",
                        "description": "yyyy-mm-dd format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateIntervalTo",
                        "required": true,
                        "in": "query",
                        "description": "yyyy-mm-dd format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "target",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "companies / statistics"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/companies/{companyId}/statistics/user-table": {
            "get": {
                "operationId": "StatisticsController_getUserTableData",
                "summary": "Get user inline stats",
                "parameters": [
                    {
                        "name": "companyId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "users",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "pageSize",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "from",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "to",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromTime",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "toTime",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lots",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "slots",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "searchText",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeIllegalSessions",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "sessionsGroupBy",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "enum": [
                                "reservation",
                                "session"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "companies / statistics"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/search/blocks": {
            "get": {
                "operationId": "SlotBlockController_findSlotBlocks",
                "summary": "Find slot block",
                "parameters": [
                    {
                        "name": "type",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reservationId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "blockId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "isFree",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "relations",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sharingType",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "enum": [
                                "tenants",
                                "owner",
                                "private",
                                "public",
                                "exact"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sharingLotIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "sharingFloorIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "sharingZoneIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "sharingSlotIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "sharingGroupIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "sharingOwnerId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "sharingIntervalType",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "enum": [
                                "date",
                                "datetime"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sharingIntervalFrom",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sharingIntervalTo",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "blockingReservationId",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "blockingReservationIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TableData"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "blocks"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/carpark/reservations/{reservationId}": {
            "post": {
                "operationId": "SlotBlockController_bindBlock",
                "summary": "Bind reservation to block",
                "parameters": [
                    {
                        "name": "reservationId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BindBlockDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlotBlock"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "blocks"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "SlotBlockController_releaseBlockByReservation",
                "summary": "Release block",
                "parameters": [
                    {
                        "name": "reservationId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "slotId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "blocks"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/carpark/blocks/{blockId}": {
            "delete": {
                "operationId": "SlotBlockController_releaseBlockById",
                "summary": "Release block",
                "parameters": [
                    {
                        "name": "blockId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "blocks"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/carpark/reservations/{reservationId}/blocking": {
            "post": {
                "operationId": "SlotBlockController_createBlocking",
                "summary": "Create blocking on block",
                "parameters": [
                    {
                        "name": "reservationId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BindBlockDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlotBlock"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "blocks"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "SlotBlockController_releaseBlocking",
                "summary": "Create blocking on block",
                "parameters": [
                    {
                        "name": "reservationId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "blocks"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/carpark/actions": {
            "patch": {
                "operationId": "SlotBlockController_functions",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BlockActionDto"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "blocks"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/search/lots/{lotId}/occupancy": {
            "get": {
                "operationId": "SlotBlockController_getCurrentOccupancy",
                "summary": "Get lot occupancy",
                "parameters": [
                    {
                        "name": "lotId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "date",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "format": "date-time",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "blocks"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/search/slots": {
            "get": {
                "operationId": "CarparkSearchController_findTableSlots",
                "summary": "Find slots",
                "parameters": [
                    {
                        "name": "companyId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lotIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "pageSize",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "floorIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "slotIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "zoneIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "userIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "groupIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "ownerId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "searchText",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "relations",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "intervalFrom",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    {
                        "name": "intervalTo",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TableData"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "search"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/search/lots/{lotId}/capacity": {
            "get": {
                "operationId": "CarparkSearchController_getLotCapacity",
                "summary": "Get lot capacity",
                "parameters": [
                    {
                        "name": "lotId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "search"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/search/lots": {
            "get": {
                "operationId": "CarparkSearchController_findLots",
                "summary": "Find lot",
                "parameters": [
                    {
                        "name": "type",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "enum": [
                                "user",
                                "company",
                                "code",
                                "carpark"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "companyId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lotId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "floorIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "zoneIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "slotIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "groupIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "code",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "relations",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "relationsLevel",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TableData"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "search"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/search/lots-public": {
            "get": {
                "operationId": "CarparkSearchController_findAllPublic",
                "summary": "Find lot with distance and occupancy",
                "parameters": [
                    {
                        "name": "searchText",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "locationLatitude",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "locationLongitude",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "locationRadius",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lotIds",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "pageSize",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "pageFrom",
                        "required": false,
                        "in": "query",
                        "description": "last lot name from previous search",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tags",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "priceFrom",
                        "required": false,
                        "in": "query",
                        "description": "int, 120 == 1 euro 20 cents",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "priceTo",
                        "required": false,
                        "in": "query",
                        "description": "int, 120 == 1 euro 20 cents",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "intervalFrom",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "intervalTo",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "duration",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "freeFrom",
                        "required": false,
                        "in": "query",
                        "description": "free from date",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TableData"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "search"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/users/{userId}/lots": {
            "get": {
                "operationId": "CarparkSearchController_getPossibleLotsForUser",
                "summary": "Get all possible lots for user",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserLotDto"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "search"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/companies/{companyId}/lots": {
            "get": {
                "operationId": "CarparkSearchController_getUserGroupLots",
                "summary": "Get all parking lots beloging to particular group",
                "parameters": [
                    {
                        "name": "companyId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LotDto"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "search"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/companies/{companyId}/lots/{lotId}/tenants": {
            "get": {
                "operationId": "CarparkSearchController_findLotTenants",
                "summary": "Find lot tenants",
                "parameters": [
                    {
                        "name": "companyId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lotId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "search"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/carpark/codes/{code}": {
            "get": {
                "operationId": "ParkCodeController_findCarpark",
                "summary": "Find carpark",
                "parameters": [
                    {
                        "name": "code",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TableData"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "search"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/sensors": {
            "post": {
                "operationId": "SensorController_create",
                "summary": "Create sensor",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSensorDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Sensor with such serial already exists"
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "sensors"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/sensors/{serial}": {
            "get": {
                "operationId": "SensorController_find",
                "summary": "Find sensor",
                "parameters": [
                    {
                        "name": "serial",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TableData"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "sensors"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "patch": {
                "operationId": "SensorController_update",
                "summary": "Update sensor",
                "parameters": [
                    {
                        "name": "serial",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSensorDto"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "sensors"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "SensorController_delete",
                "summary": "Delete sensor",
                "parameters": [
                    {
                        "name": "serial",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "sensors"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/lots/{lotId}": {
            "get": {
                "operationId": "LotCrudController_getLot",
                "summary": "Get a lot",
                "parameters": [
                    {
                        "name": "lotId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lot",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LotDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lots"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "patch": {
                "operationId": "LotCrudController_updateLot",
                "summary": "Update lot",
                "parameters": [
                    {
                        "name": "lotId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateLotDto"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "The record has been successfully updated."
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lots"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "LotCrudController_delete",
                "summary": "Delete lot",
                "parameters": [
                    {
                        "name": "lotId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Lot has been successfully deleted."
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lots"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/lots": {
            "post": {
                "operationId": "LotCrudController_createLot",
                "summary": "Create new lot",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateLotDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Lot successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LotDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "lots"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/carpark/users/{userId}/slots": {
            "post": {
                "operationId": "SlotController_createSlot",
                "summary": "Create and register slot",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSlotReqDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SlotDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Slot already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "slots"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/carpark/users/{userId}/slots/{slotId}": {
            "patch": {
                "operationId": "SlotController_editSlot",
                "summary": "Edit slot name or serialNumber",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "slotId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSlotReqDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateSlotReqDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Slot not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "slots"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "SlotController_deleteSpot",
                "summary": "Delete spot",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "slotId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successully deleted"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Spot not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "slots"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/users/{userId}/slots/{slotId}/ownership": {
            "post": {
                "operationId": "SlotController_createOwnership",
                "summary": "Delete ownership",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "slotId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successully removed"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Spot not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "slots"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "SlotController_deleteOwnership",
                "summary": "Delete ownership",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "slotId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "removeReservations",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successully removed"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Spot not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "slots"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/zones": {
            "get": {
                "operationId": "ZoneController_getSlotDetail",
                "summary": "Get zone geojson data",
                "parameters": [
                    {
                        "name": "zoneId",
                        "required": false,
                        "in": "query",
                        "description": "Zone id",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "latitude",
                        "required": false,
                        "in": "query",
                        "description": "Latitude",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "longitude",
                        "required": false,
                        "in": "query",
                        "description": " Longitude",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "zones"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/public/v1/slots": {
            "get": {
                "operationId": "SlotZoneController_getSlotDetail",
                "summary": "Get slots geojson data",
                "parameters": [
                    {
                        "name": "zoneId",
                        "required": false,
                        "in": "query",
                        "description": "Zone id",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedErrorDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenErrorDto"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "zones"
                ]
            }
        }
    },
    "info": {
        "title": "Parking service API",
        "description": "Parking service API documentation",
        "version": "0.0.1",
        "contact": {}
    },
    "tags": [],
    "servers": [],
    "components": {
        "securitySchemes": {
            "bearer": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "type": "http"
            }
        },
        "schemas": {
            "ForbiddenErrorDto": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "number",
                        "description": "\">0\" for standard status code erros, \"<0\" for system specific errors",
                        "examples": [
                            500,
                            -505
                        ],
                        "example": 403
                    },
                    "message": {
                        "type": "string",
                        "description": "Short error info",
                        "examples": [
                            "Not found",
                            "Unexpected server error"
                        ]
                    },
                    "error": {
                        "type": "string",
                        "description": "Detailed error info",
                        "examples": [
                            "User #41 not found",
                            "reading \"detail\" of undefined"
                        ],
                        "example": "Forbidden"
                    }
                },
                "required": [
                    "statusCode",
                    "message",
                    "error"
                ]
            },
            "ErrorDto": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "number",
                        "description": "\">0\" for standard status code erros, \"<0\" for system specific errors",
                        "examples": [
                            500,
                            -505
                        ]
                    },
                    "message": {
                        "type": "string",
                        "description": "Short error info",
                        "examples": [
                            "Not found",
                            "Unexpected server error"
                        ]
                    },
                    "error": {
                        "type": "string",
                        "description": "Detailed error info",
                        "examples": [
                            "User #41 not found",
                            "reading \"detail\" of undefined"
                        ]
                    }
                },
                "required": [
                    "statusCode",
                    "message",
                    "error"
                ]
            },
            "JobDto": {
                "type": "object",
                "properties": {}
            },
            "CreateJobDto": {
                "type": "object",
                "properties": {}
            },
            "NotFoundException": {
                "type": "object",
                "properties": {}
            },
            "CountryDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Country name",
                        "example": "Slovakia"
                    },
                    "code": {
                        "type": "string",
                        "description": "Country code",
                        "example": "SK"
                    },
                    "phone": {
                        "type": "number",
                        "description": "Country phone prefix",
                        "example": 421
                    },
                    "symbol": {
                        "type": "string",
                        "description": "Country currency symbol",
                        "example": "€"
                    },
                    "currency": {
                        "type": "string",
                        "description": "Country currency name",
                        "example": "EUR"
                    },
                    "flag": {
                        "type": "string",
                        "description": "Country flag (not implemented yet)",
                        "example": ""
                    }
                }
            },
            "CreateUserReqDto": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email. Unique for each user.",
                        "example": "janko.hrasko@gmail.com"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's passowrd.",
                        "example": "jablon123"
                    },
                    "newsletter": {
                        "type": "boolean",
                        "description": "True if user gave consent for sending newsletters."
                    }
                },
                "required": [
                    "email",
                    "password",
                    "newsletter"
                ]
            },
            "CreateUserResDto": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "number",
                        "description": "Id of newly created user."
                    },
                    "email": {
                        "type": "string",
                        "description": "User email. Unique for each user."
                    },
                    "expiresAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Time when verification email expires."
                    }
                },
                "required": [
                    "userId",
                    "email",
                    "expiresAt"
                ]
            },
            "ConflictErrorDto": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "number",
                        "description": "\">0\" for standard status code erros, \"<0\" for system specific errors",
                        "examples": [
                            500,
                            -505
                        ],
                        "example": 409
                    },
                    "message": {
                        "type": "string",
                        "description": "Short error info",
                        "examples": [
                            "Not found",
                            "Unexpected server error"
                        ]
                    },
                    "error": {
                        "type": "string",
                        "description": "Detailed error info",
                        "examples": [
                            "User #41 not found",
                            "reading \"detail\" of undefined"
                        ],
                        "example": "Conflict"
                    }
                },
                "required": [
                    "statusCode",
                    "message",
                    "error"
                ]
            },
            "UpdateUserReqDto": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "description": "User's first name."
                    },
                    "lastName": {
                        "type": "string",
                        "description": "User's last name."
                    }
                },
                "required": [
                    "firstName",
                    "lastName"
                ]
            },
            "UpdateUserResDto": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "description": "User's first name."
                    },
                    "lastName": {
                        "type": "string",
                        "description": "User's last name."
                    },
                    "id": {
                        "type": "number",
                        "description": "Id of updated user."
                    }
                },
                "required": [
                    "firstName",
                    "lastName",
                    "id"
                ]
            },
            "UnauthorizedErrorDto": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "number",
                        "description": "\">0\" for standard status code erros, \"<0\" for system specific errors",
                        "examples": [
                            500,
                            -505
                        ],
                        "example": 401
                    },
                    "message": {
                        "type": "string",
                        "description": "Short error info",
                        "examples": [
                            "Not found",
                            "Unexpected server error"
                        ]
                    },
                    "error": {
                        "type": "string",
                        "description": "Detailed error info",
                        "examples": [
                            "User #41 not found",
                            "reading \"detail\" of undefined"
                        ],
                        "example": "Unauthorized"
                    }
                },
                "required": [
                    "statusCode",
                    "message",
                    "error"
                ]
            },
            "CreatePhoneReqDto": {
                "type": "object",
                "properties": {
                    "countryCode": {
                        "type": "string",
                        "description": "Country code prefix of phone number.",
                        "example": "+421"
                    },
                    "number": {
                        "type": "string",
                        "description": "Phone number. Should be normalized to take in account country code predix",
                        "example": "905551887"
                    },
                    "system": {
                        "type": "string",
                        "description": "Phones operation system type",
                        "example": "Android"
                    },
                    "version": {
                        "type": "string",
                        "description": "Phones operation system version",
                        "example": "8.2.4"
                    },
                    "pushId": {
                        "type": "string",
                        "description": "Unique identificator for push notifications"
                    }
                },
                "required": [
                    "countryCode",
                    "number",
                    "system",
                    "version",
                    "pushId"
                ]
            },
            "CreatePhoneResDto": {
                "type": "object",
                "properties": {
                    "countryCode": {
                        "type": "string",
                        "description": "Country code prefix of phone number.",
                        "example": "+421"
                    },
                    "number": {
                        "type": "string",
                        "description": "Phone number. Should be normalized to take in account country code predix",
                        "example": "905551887"
                    },
                    "system": {
                        "type": "string",
                        "description": "Phones operation system type",
                        "example": "Android"
                    },
                    "version": {
                        "type": "string",
                        "description": "Phones operation system version",
                        "example": "8.2.4"
                    },
                    "pushId": {
                        "type": "string",
                        "description": "Unique identificator for push notifications"
                    },
                    "id": {
                        "type": "number",
                        "description": "Id of created phone"
                    },
                    "expiresAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "UTC date when OTP code for phone verification expires"
                    }
                },
                "required": [
                    "countryCode",
                    "number",
                    "system",
                    "version",
                    "pushId",
                    "id",
                    "expiresAt"
                ]
            },
            "NotFoundErrorDto": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "number",
                        "description": "\">0\" for standard status code erros, \"<0\" for system specific errors",
                        "examples": [
                            500,
                            -505
                        ],
                        "example": 404
                    },
                    "message": {
                        "type": "string",
                        "description": "Short error info",
                        "examples": [
                            "Not found",
                            "Unexpected server error"
                        ]
                    },
                    "error": {
                        "type": "string",
                        "description": "Detailed error info",
                        "examples": [
                            "User #41 not found",
                            "reading \"detail\" of undefined"
                        ],
                        "example": "Not found"
                    }
                },
                "required": [
                    "statusCode",
                    "message",
                    "error"
                ]
            },
            "UpdatePhoneReqDto": {
                "type": "object",
                "properties": {
                    "pushId": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "number": {
                        "type": "string"
                    },
                    "system": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "VerifyPhoneReqDto": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "Verification token. Can be either token from mail or OTP from sms"
                    }
                },
                "required": [
                    "token"
                ]
            },
            "GetOnboardingStatusResDto": {
                "type": "object",
                "properties": {
                    "current": {
                        "type": "string",
                        "description": "Current onboarding step in onboarding workflow"
                    },
                    "next": {
                        "type": "string",
                        "description": "Next step in onboarding workflow"
                    }
                },
                "required": [
                    "current",
                    "next"
                ]
            },
            "SuggestCompanyDto": {
                "type": "object",
                "properties": {
                    "companyName": {
                        "type": "string",
                        "maxLength": 32
                    },
                    "city": {
                        "type": "string",
                        "maxLength": 32
                    }
                },
                "required": [
                    "companyName",
                    "city"
                ]
            },
            "ParkingCardMappingDto": {
                "type": "object",
                "properties": {
                    "serial": {
                        "type": "string",
                        "description": "Permit card serial number"
                    },
                    "type": {
                        "type": "string",
                        "description": "Permit card type code"
                    },
                    "name": {
                        "type": "string",
                        "description": "Display name"
                    },
                    "isMe": {
                        "type": "boolean",
                        "description": "Set as owner's iPermit card. Is supperior to others when comes to restrictions.",
                        "default": false
                    },
                    "cardId": {
                        "type": "number",
                        "description": "Permit card id, which corresponds with serial number + type"
                    },
                    "id": {
                        "type": "number"
                    },
                    "userId": {
                        "type": "number"
                    }
                },
                "required": [
                    "serial",
                    "name",
                    "id",
                    "userId"
                ]
            },
            "CreateParkingCardMappingDto": {
                "type": "object",
                "properties": {
                    "serial": {
                        "type": "string",
                        "description": "Permit card serial number"
                    },
                    "type": {
                        "type": "string",
                        "description": "Permit card type code"
                    },
                    "name": {
                        "type": "string",
                        "description": "Display name"
                    },
                    "isMe": {
                        "type": "boolean",
                        "description": "Set as owner's iPermit card. Is supperior to others when comes to restrictions.",
                        "default": false
                    },
                    "cardId": {
                        "type": "number",
                        "description": "Permit card id, which corresponds with serial number + type"
                    }
                },
                "required": [
                    "serial",
                    "name"
                ]
            },
            "UpdateCardMappingDto": {
                "type": "object",
                "properties": {
                    "serial": {
                        "type": "string",
                        "description": "Permit card serial number"
                    },
                    "type": {
                        "type": "string",
                        "description": "Permit card type code"
                    },
                    "name": {
                        "type": "string",
                        "description": "Display name"
                    },
                    "isMe": {
                        "type": "boolean",
                        "description": "Set as owner's iPermit card. Is supperior to others when comes to restrictions.",
                        "default": false
                    },
                    "cardId": {
                        "type": "number",
                        "description": "Permit card id, which corresponds with serial number + type"
                    },
                    "id": {
                        "type": "number"
                    }
                },
                "required": [
                    "serial",
                    "name",
                    "id"
                ]
            },
            "CreateVehicleDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "name under which will be vehicle displayed in the system"
                    },
                    "licencePlate": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "default": {
                        "type": "boolean",
                        "description": "pure preference that will be prefilled when required",
                        "default": false
                    },
                    "vehicleTypeCode": {
                        "type": "string",
                        "description": "code value from vehicle type codelist"
                    },
                    "engineTypeCode": {
                        "type": "string",
                        "description": "code value from engine type codelist"
                    },
                    "parkingCardId": {
                        "type": "number",
                        "description": "id of parking card that will identify this vehicle when spotted"
                    }
                },
                "required": [
                    "licencePlate",
                    "vehicleTypeCode",
                    "engineTypeCode"
                ]
            },
            "VehicleDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "name under which will be vehicle displayed in the system"
                    },
                    "licencePlate": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "default": {
                        "type": "boolean",
                        "description": "pure preference that will be prefilled when required",
                        "default": false
                    },
                    "vehicleTypeCode": {
                        "type": "string",
                        "description": "code value from vehicle type codelist"
                    },
                    "engineTypeCode": {
                        "type": "string",
                        "description": "code value from engine type codelist"
                    },
                    "parkingCardId": {
                        "type": "number",
                        "description": "id of parking card that will identify this vehicle when spotted"
                    },
                    "id": {
                        "type": "number"
                    }
                },
                "required": [
                    "licencePlate",
                    "vehicleTypeCode",
                    "engineTypeCode",
                    "id"
                ]
            },
            "ESlotScope": {
                "type": "string",
                "description": "Reservation scope",
                "enum": [
                    "me",
                    "iPermitCards",
                    "public"
                ]
            },
            "ESlotStatus": {
                "type": "string",
                "description": "Slot status",
                "enum": [
                    "NOT_CALIBRATED",
                    "NOT_SHARED",
                    "FREE",
                    "BOOKED",
                    "OCCUPIED",
                    "ILLEGAL"
                ]
            },
            "SlotSettingsDto": {
                "type": "object",
                "properties": {
                    "allowIPermitCards": {
                        "type": "boolean",
                        "description": "If true, parking with iPermit card is allowed"
                    }
                },
                "required": [
                    "allowIPermitCards"
                ]
            },
            "ClosestBookedSessionDto": {
                "type": "object",
                "properties": {
                    "from": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Date from which parking session is booked"
                    },
                    "to": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Date until which parking session is booked"
                    },
                    "bookedBy": {
                        "type": "string",
                        "description": "Identification of entity for which is reservation made"
                    },
                    "price": {
                        "type": "number",
                        "description": "Price value per hour"
                    },
                    "currency": {
                        "type": "string",
                        "description": "Price currency"
                    }
                },
                "required": [
                    "from",
                    "to",
                    "bookedBy",
                    "price",
                    "currency"
                ]
            },
            "ParkingSessionDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number",
                        "description": "Parking session id"
                    },
                    "from": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Date when parking session started"
                    },
                    "to": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Date when parking session ended"
                    },
                    "parkedBy": {
                        "type": "string",
                        "description": "Identification of parking entity"
                    }
                },
                "required": [
                    "id",
                    "from"
                ]
            },
            "LocationDto": {
                "type": "object",
                "properties": {
                    "latitude": {
                        "type": "string"
                    },
                    "longitude": {
                        "type": "string"
                    }
                },
                "required": [
                    "latitude",
                    "longitude"
                ]
            },
            "SlotDetailDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number",
                        "description": "Slot id"
                    },
                    "name": {
                        "type": "string",
                        "description": "Slot name"
                    },
                    "lotName": {
                        "type": "string",
                        "description": "Parking lot name"
                    },
                    "address": {
                        "type": "string",
                        "description": "Parking lot address"
                    },
                    "scope": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ESlotScope"
                        }
                    },
                    "status": {
                        "$ref": "#/components/schemas/ESlotStatus"
                    },
                    "usedBy": {
                        "type": "string",
                        "description": "Used by string"
                    },
                    "settings": {
                        "description": "Slot sharing settings",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SlotSettingsDto"
                            }
                        ]
                    },
                    "happenedAt": {
                        "type": "number"
                    },
                    "timezone": {
                        "type": "string"
                    },
                    "inPool": {
                        "type": "boolean"
                    },
                    "sharings": {
                        "type": "array",
                        "items": {
                            "type": "array"
                        }
                    },
                    "closestBookedSession": {
                        "description": "Closest booked session (closest reservation)",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ClosestBookedSessionDto"
                            }
                        ]
                    },
                    "parkingSession": {
                        "description": "Present is someone is currently parking on this slot",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ParkingSessionDto"
                            }
                        ]
                    },
                    "location": {
                        "$ref": "#/components/schemas/LocationDto"
                    },
                    "onStreet": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "lotName",
                    "address",
                    "scope",
                    "status",
                    "usedBy",
                    "settings",
                    "timezone"
                ]
            },
            "CreateSlotReqDto": {
                "type": "object",
                "properties": {
                    "serialNumber": {
                        "type": "string"
                    },
                    "location": {
                        "$ref": "#/components/schemas/LocationDto"
                    },
                    "onStreet": {
                        "type": "boolean",
                        "default": false
                    }
                },
                "required": [
                    "serialNumber"
                ]
            },
            "UpdateSlotReqDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "vehicleType": {
                        "type": "string"
                    },
                    "slotType": {
                        "type": "string"
                    },
                    "width": {
                        "type": "number"
                    },
                    "length": {
                        "type": "number"
                    },
                    "allowIPermitCards": {
                        "type": "boolean"
                    },
                    "userId": {
                        "type": "number"
                    },
                    "lotId": {
                        "type": "number"
                    },
                    "floorId": {
                        "type": "number"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "lot": {
                        "$ref": "#/components/schemas/InfoLotDto"
                    },
                    "floor": {
                        "$ref": "#/components/schemas/InfoFloorDto"
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sensors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "priceFrom": {
                        "$ref": "#/components/schemas/UnitPriceDto"
                    },
                    "location": {
                        "$ref": "#/components/schemas/LocationDto"
                    },
                    "onStreet": {
                        "type": "boolean"
                    }
                }
            },
            "AllocationReqDto": {
                "type": "object",
                "properties": {
                    "reservationId": {
                        "type": "number"
                    },
                    "lotId": {
                        "type": "number"
                    },
                    "exactSlotId": {
                        "description": "if provided, only this slot will be considered",
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    "excludeSlotIds": {
                        "description": "if provided, these slots will be excluded",
                        "type": "array",
                        "items": {
                            "type": "array"
                        }
                    },
                    "reallocate": {
                        "type": "boolean",
                        "description": "Marking as re-allocation"
                    },
                    "isPublic": {
                        "type": "boolean",
                        "description": "Search in public slots"
                    }
                }
            },
            "EAllocationRule": {
                "type": "string",
                "enum": [
                    "INTERVAL_OFFSET",
                    "PREFER_SLOT_OWNER",
                    "SLOT_TAG",
                    "PREFER_SAME_SLOT",
                    "RESERVATION_EXTEND",
                    "SPREAD_OUT_OCCUPANCY",
                    "MIN_OCCUPANCY",
                    "DAYS_AHEAD",
                    "RESERVATION_BALANCER"
                ]
            },
            "AllocationRuleDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/EAllocationRule"
                    },
                    "metadata": {
                        "type": "object"
                    },
                    "order": {
                        "type": "number"
                    },
                    "id": {
                        "type": "number"
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "name",
                    "metadata",
                    "order",
                    "id",
                    "enabled"
                ]
            },
            "CreateAllocationRuleDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/EAllocationRule"
                    },
                    "metadata": {
                        "type": "object"
                    },
                    "order": {
                        "type": "number"
                    }
                },
                "required": [
                    "name",
                    "metadata",
                    "order"
                ]
            },
            "EnableParkingSessionOccupancyReqDto": {
                "type": "object",
                "properties": {
                    "parkingSessionId": {
                        "type": "number",
                        "description": "Id of session that reports occupancy"
                    }
                },
                "required": [
                    "parkingSessionId"
                ]
            },
            "SessionTableDto": {
                "type": "object",
                "properties": {}
            },
            "DateIntervalDto": {
                "type": "object",
                "properties": {
                    "from": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "to": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "from",
                    "to"
                ]
            },
            "ReservationUsedByDto": {
                "type": "object",
                "properties": {
                    "licencePlate": {
                        "type": "string"
                    },
                    "permitCardId": {
                        "type": "number"
                    },
                    "vehicleId": {
                        "type": "number"
                    }
                }
            },
            "CreateReservationReqDto": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "number",
                        "description": "User id"
                    },
                    "lotId": {
                        "type": "number",
                        "description": "Lot id"
                    },
                    "zoneId": {
                        "type": "number",
                        "description": "Zone id"
                    },
                    "groupId": {
                        "type": "number",
                        "description": "Group id"
                    },
                    "interval": {
                        "description": "Block subinterval to be reserved, null for whole block",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateIntervalDto"
                            }
                        ]
                    },
                    "usedBy": {
                        "description": "Identifier of entity that is going to use this spot. Fill just one property.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ReservationUsedByDto"
                            }
                        ]
                    },
                    "slotId": {
                        "type": "number"
                    }
                },
                "required": [
                    "usedBy"
                ]
            },
            "ReservationDetailLocationDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number",
                        "description": "Location id"
                    },
                    "name": {
                        "type": "string",
                        "description": "Location name, can be slot name, parking lot name or some general text"
                    },
                    "address": {
                        "type": "string",
                        "description": "Location address"
                    },
                    "type": {
                        "type": "string",
                        "description": "Location type",
                        "enum": [
                            "lot",
                            "cityZone"
                        ]
                    }
                },
                "required": [
                    "id",
                    "name",
                    "address",
                    "type"
                ]
            },
            "ReservationDetailSlotDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number",
                        "description": "Slot id"
                    },
                    "name": {
                        "type": "string",
                        "description": "Slot name"
                    },
                    "lot": {
                        "type": "string",
                        "description": "deprecated"
                    },
                    "floor": {
                        "type": "string",
                        "description": "deprecated"
                    },
                    "gate": {
                        "type": "string",
                        "description": "deprecated"
                    },
                    "zone": {
                        "type": "string",
                        "description": "deprecated"
                    },
                    "address": {
                        "type": "string",
                        "description": "deprecated"
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "ReservationDetailVehicleDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number",
                        "description": "Vehicle id if available"
                    },
                    "name": {
                        "type": "string",
                        "description": "Vehicle name"
                    },
                    "licencePlate": {
                        "type": "string",
                        "description": "Vehicle licence plate"
                    }
                },
                "required": [
                    "name",
                    "licencePlate"
                ]
            },
            "ReservationDetailParkingCardDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number",
                        "description": "Parking card id"
                    },
                    "serial": {
                        "type": "string",
                        "description": "Parking card serial"
                    }
                },
                "required": [
                    "id",
                    "serial"
                ]
            },
            "PriceDto": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "number",
                        "description": "Price amount as whole number in cents (100 means 1.00 eur)",
                        "example": "100"
                    },
                    "currency": {
                        "type": "string",
                        "description": "Price currency",
                        "example": "EUR"
                    },
                    "execution": {
                        "type": "string",
                        "description": "If true, price is upfront and should be paid before service is provided",
                        "enum": [
                            "upfront",
                            "later",
                            "dummy"
                        ]
                    }
                },
                "required": [
                    "amount",
                    "currency"
                ]
            },
            "ReservationDetailInvitationDto": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Invitation email"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "Invited person's first name"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Invited person's last name"
                    },
                    "token": {
                        "type": "string",
                        "description": "Invitation token"
                    },
                    "state": {
                        "type": "string",
                        "description": "Invitation status",
                        "enum": [
                            "NEW",
                            "PENDING",
                            "ACCEPTED",
                            "DECLINED"
                        ]
                    },
                    "acceptedAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Date when invitation was accepted"
                    },
                    "declinedAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Date when invitaiton was declined"
                    }
                },
                "required": [
                    "email",
                    "firstName",
                    "lastName",
                    "token",
                    "state"
                ]
            },
            "ReservationDetailUserDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "email": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "avatar": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "email",
                    "firstName",
                    "lastName",
                    "avatar"
                ]
            },
            "ReservationDetailDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number",
                        "description": "Reservation id"
                    },
                    "state": {
                        "type": "string",
                        "description": "Reservation state",
                        "enum": [
                            "REQUESTED",
                            "PENDING",
                            "NEW",
                            "PAYMENT_REQUIRED",
                            "ACTIVE",
                            "ERROR",
                            "EXPIRED"
                        ]
                    },
                    "location": {
                        "description": "Location",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ReservationDetailLocationDto"
                            }
                        ]
                    },
                    "slot": {
                        "description": "Slot",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ReservationDetailSlotDto"
                            }
                        ]
                    },
                    "slotId": {
                        "type": "number",
                        "description": "deprecated"
                    },
                    "vehicle": {
                        "description": "Vehicle",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ReservationDetailVehicleDto"
                            }
                        ]
                    },
                    "parkingCard": {
                        "description": "Parking card",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ReservationDetailParkingCardDto"
                            }
                        ]
                    },
                    "interval": {
                        "description": "Interval",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateIntervalDto"
                            }
                        ]
                    },
                    "duration": {
                        "type": "number",
                        "description": "Interval duration in minutes"
                    },
                    "price": {
                        "description": "Total price for whole reservation",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PriceDto"
                            }
                        ]
                    },
                    "invitation": {
                        "description": "Invitation",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ReservationDetailInvitationDto"
                            }
                        ]
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Date when reservation was created"
                    },
                    "expiresAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Date when reservation will expire"
                    },
                    "allocatedAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Date when reservation was allocated"
                    },
                    "deletedAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Date when reservation was deleted"
                    },
                    "isOpenGateSupported": {
                        "type": "boolean",
                        "description": "Indicator whether open gate functionality is supported"
                    },
                    "isExtendSupported": {
                        "type": "boolean",
                        "description": "Indicator whether extend reservation functionality is supported"
                    },
                    "isReallocable": {
                        "type": "boolean"
                    },
                    "userId": {
                        "type": "number"
                    },
                    "user": {
                        "$ref": "#/components/schemas/ReservationDetailUserDto"
                    },
                    "groupId": {
                        "type": "number"
                    },
                    "ticketId": {
                        "type": "string"
                    },
                    "flow": {
                        "type": "string",
                        "description": "Reservation flow",
                        "enum": [
                            "PRE_RESERVATION",
                            "PARKING_AROUND",
                            "COMPANY_PARKING",
                            "COMPANY_PARKING_INVITE",
                            "INSTANT_PARKING",
                            "PAY_AS_GO"
                        ]
                    },
                    "sessionStatuses": {
                        "description": "Array of reservation session statuses",
                        "type": "array",
                        "items": {
                            "type": "array"
                        }
                    },
                    "timezone": {
                        "type": "string",
                        "description": "Reservation timezone"
                    },
                    "requests": {
                        "description": "Reservation open requests",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "id",
                    "state",
                    "location",
                    "slotId",
                    "vehicle",
                    "interval",
                    "duration",
                    "price",
                    "createdAt",
                    "expiresAt",
                    "allocatedAt",
                    "deletedAt",
                    "isOpenGateSupported",
                    "isExtendSupported",
                    "isReallocable",
                    "userId",
                    "user",
                    "flow",
                    "sessionStatuses",
                    "timezone",
                    "requests"
                ]
            },
            "Price": {
                "type": "object",
                "properties": {}
            },
            "CreateRequestBlocksDto": {
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "number",
                        "description": "Group id"
                    },
                    "interval": {
                        "description": "Block interval or subinterval to be reserved",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateIntervalDto"
                            }
                        ]
                    },
                    "price": {
                        "description": "Price for this reservation",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Price"
                            }
                        ]
                    },
                    "usedBy": {
                        "description": "Identifier of entity that is going to use this spot. Fill just one property.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ReservationUsedByDto"
                            }
                        ]
                    },
                    "ticketId": {
                        "type": "string",
                        "description": "External ticketId"
                    }
                },
                "required": [
                    "interval",
                    "price",
                    "usedBy"
                ]
            },
            "CreateRequestsReqDto": {
                "type": "object",
                "properties": {
                    "lotId": {
                        "type": "number",
                        "description": "Lot id"
                    },
                    "blocks": {
                        "description": "User blocks with intervals",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateRequestBlocksDto"
                        }
                    },
                    "flow": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "number",
                        "description": "User id"
                    }
                },
                "required": [
                    "lotId",
                    "blocks",
                    "flow"
                ]
            },
            "CreateReservationInvitationDto": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "interval": {
                        "$ref": "#/components/schemas/DateIntervalDto"
                    },
                    "lotId": {
                        "type": "number"
                    },
                    "slotId": {
                        "type": "number"
                    },
                    "groupId": {
                        "type": "number"
                    },
                    "licencePlate": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "User first name"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "User last name"
                    }
                },
                "required": [
                    "email",
                    "interval",
                    "lotId",
                    "groupId"
                ]
            },
            "ChangeUserDto": {
                "type": "object",
                "properties": {
                    "targetUserId": {
                        "type": "number"
                    }
                },
                "required": [
                    "targetUserId"
                ]
            },
            "ChangeSlotDto": {
                "type": "object",
                "properties": {
                    "slotId": {
                        "type": "number",
                        "description": "Particular slot id or omit to any other slot"
                    },
                    "policy": {
                        "type": "string"
                    }
                },
                "required": [
                    "policy"
                ]
            },
            "ChangeIntervalDto": {
                "type": "object",
                "properties": {
                    "interval": {
                        "$ref": "#/components/schemas/DateIntervalDto"
                    },
                    "reallocate": {
                        "type": "boolean",
                        "description": "If true and target slot is already reserved by other reservation, the reservation will be reallocated to another slot",
                        "default": false
                    }
                },
                "required": [
                    "interval"
                ]
            },
            "ChangePropsDto": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "confirmedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "expiresAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "queuedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "deleteFlow": {
                        "type": "string",
                        "enum": [
                            "PORTAL",
                            "APP_MOBILE",
                            "ALLOCATION",
                            "PAYMENT_FAILED",
                            "PAYMENT_EXPIRED",
                            "INVITATION_DECLINED",
                            "ALLOCATION_DECLINED",
                            "MISSING_SESSION_REMINDER",
                            "ADMIN",
                            "BATCH",
                            "BACK_BUTTON",
                            "EXPIRATION"
                        ]
                    },
                    "metadata": {
                        "type": "object"
                    }
                }
            },
            "UpdateReservationReqDto": {
                "type": "object",
                "properties": {
                    "usedBy": {
                        "description": "Identifier of entity that is going to use this spot. Fill just one property.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ReservationUsedByDto"
                            }
                        ]
                    },
                    "changeUsedBy": {
                        "description": "Identifier of entity that is going to use this spot. Fill just one property.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ReservationUsedByDto"
                            }
                        ]
                    },
                    "changeUser": {
                        "description": "Change user of reservation",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ChangeUserDto"
                            }
                        ]
                    },
                    "changeSlot": {
                        "description": "Change slot of reservation",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ChangeSlotDto"
                            }
                        ]
                    },
                    "changeInterval": {
                        "description": "Change reservation interval",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ChangeIntervalDto"
                            }
                        ]
                    },
                    "extendInterval": {
                        "description": "Extend reservation interval",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ChangeIntervalDto"
                            }
                        ]
                    },
                    "changeProps": {
                        "description": "Change reservation properties",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ChangePropsDto"
                            }
                        ]
                    }
                }
            },
            "EReservationRule": {
                "type": "string",
                "enum": [
                    "DAYS_AHEAD",
                    "LENGTH",
                    "LATEST_STORNO",
                    "MAX_PER_WEEK",
                    "VEHICLE_REQUIRED",
                    "PARKING_CARD_REQUIRED",
                    "OPEN_GATE",
                    "EXTEND_INTERVAL"
                ]
            },
            "ReservationRuleMetadata": {
                "type": "object",
                "properties": {
                    "daysAhead": {
                        "type": "number",
                        "description": "In minutes"
                    },
                    "maxLength": {
                        "type": "string",
                        "description": "In `ms` lib naming convention"
                    },
                    "minLength": {
                        "type": "string",
                        "description": "In `ms` lib naming convention"
                    },
                    "latestStorno": {
                        "type": "string",
                        "description": "In `ms` lib naming convention"
                    },
                    "maxPerWeek": {
                        "type": "number",
                        "description": "Max reservations per week"
                    },
                    "vehicleRequired": {
                        "type": "boolean",
                        "description": "Boolean"
                    }
                }
            },
            "CreateReservationRuleDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/EReservationRule"
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/ReservationRuleMetadata"
                    },
                    "order": {
                        "type": "number"
                    },
                    "groupId": {
                        "type": "number"
                    },
                    "lotId": {
                        "type": "number"
                    },
                    "floorId": {
                        "type": "number"
                    },
                    "zoneId": {
                        "type": "number"
                    },
                    "slotId": {
                        "type": "number"
                    }
                },
                "required": [
                    "name",
                    "metadata",
                    "order"
                ]
            },
            "ReservationRuleDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/EReservationRule"
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/ReservationRuleMetadata"
                    },
                    "order": {
                        "type": "number"
                    },
                    "groupId": {
                        "type": "number"
                    },
                    "lotId": {
                        "type": "number"
                    },
                    "floorId": {
                        "type": "number"
                    },
                    "zoneId": {
                        "type": "number"
                    },
                    "slotId": {
                        "type": "number"
                    },
                    "id": {
                        "type": "number"
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "name",
                    "metadata",
                    "order",
                    "id",
                    "enabled"
                ]
            },
            "ReservationRuleCombinedDto": {
                "type": "object",
                "properties": {
                    "daysAhead": {
                        "type": "number",
                        "description": "In minutes"
                    },
                    "maxLength": {
                        "type": "string",
                        "description": "In `ms` lib naming convention"
                    },
                    "minLength": {
                        "type": "string",
                        "description": "In `ms` lib naming convention"
                    },
                    "latestStorno": {
                        "type": "string",
                        "description": "In `ms` lib naming convention"
                    },
                    "maxPerWeek": {
                        "type": "number",
                        "description": "Max reservations per week"
                    },
                    "vehicleRequired": {
                        "type": "boolean",
                        "description": "Is default vehicle required to be set"
                    },
                    "cardType": {
                        "type": "string",
                        "description": "Type of parking or permit card"
                    },
                    "extendInterval": {
                        "type": "boolean",
                        "description": "Is extend reservation interval supported"
                    },
                    "showOpenGate": {
                        "type": "boolean",
                        "description": "Is Open Gate button enabled"
                    }
                }
            },
            "ReservationTableDto": {
                "type": "object",
                "properties": {}
            },
            "ReservationSessionFilter": {
                "type": "object",
                "properties": {
                    "interval": {
                        "$ref": "#/components/schemas/DateIntervalDto"
                    },
                    "lotIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "slotIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "userIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "groupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "reservationIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sessionIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "statuses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "usedInterval": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "interval",
                    "lotIds"
                ]
            },
            "ReservationSessionPairingOptionsDto": {
                "type": "object",
                "properties": {
                    "from": {
                        "type": "string",
                        "description": "Threshold between reservation and session start to be paired together"
                    },
                    "to": {
                        "type": "string",
                        "description": "Threshold between reservation and session end to be paired together"
                    }
                }
            },
            "GenerateReservationSessionDto": {
                "type": "object",
                "properties": {
                    "filter": {
                        "$ref": "#/components/schemas/ReservationSessionFilter"
                    },
                    "operation": {
                        "type": "string"
                    },
                    "thresholds": {
                        "$ref": "#/components/schemas/ReservationSessionPairingOptionsDto"
                    }
                },
                "required": [
                    "filter",
                    "operation",
                    "thresholds"
                ]
            },
            "ReservationSessionCountsResDto": {
                "type": "object",
                "properties": {}
            },
            "ReservationSessionResDto": {
                "type": "object",
                "properties": {}
            },
            "StripePaymentOptionDto": {
                "type": "object",
                "properties": {}
            },
            "WalletPaymentOptionDto": {
                "type": "object",
                "properties": {
                    "immediate": {
                        "type": "boolean",
                        "description": "If true, wallet payment will be executed immediately"
                    }
                }
            },
            "PaymentOptionDto": {
                "type": "object",
                "properties": {
                    "useStripe": {
                        "$ref": "#/components/schemas/StripePaymentOptionDto"
                    },
                    "useWallet": {
                        "$ref": "#/components/schemas/WalletPaymentOptionDto"
                    }
                }
            },
            "CreatePaymentResDto": {
                "type": "object",
                "properties": {
                    "paymentId": {
                        "type": "number",
                        "description": "Payment service ID of payment"
                    },
                    "paymentIntent": {
                        "type": "string",
                        "description": "Stripe ID for created payment intent"
                    },
                    "ephemeralKey": {
                        "type": "string"
                    },
                    "customer": {
                        "type": "string"
                    },
                    "publishableKey": {
                        "type": "string"
                    }
                },
                "required": [
                    "paymentId",
                    "paymentIntent",
                    "ephemeralKey",
                    "customer",
                    "publishableKey"
                ]
            },
            "MakeDepositReqDto": {
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "number"
                    },
                    "conversionId": {
                        "type": "number"
                    },
                    "discountCode": {
                        "type": "string"
                    }
                },
                "required": [
                    "groupId",
                    "conversionId"
                ]
            },
            "DepositHistoryDto": {
                "type": "object",
                "properties": {
                    "senderId": {
                        "type": "number"
                    },
                    "deposit": {
                        "$ref": "#/components/schemas/PriceDto"
                    },
                    "charge": {
                        "$ref": "#/components/schemas/PriceDto"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "deposit",
                    "charge",
                    "createdAt"
                ]
            },
            "DepositConversionBannerDto": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string",
                        "description": "Banner text"
                    },
                    "color": {
                        "type": "string",
                        "description": "HEX color code"
                    }
                },
                "required": [
                    "text",
                    "color"
                ]
            },
            "DepositConversionDiscountDto": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "number",
                        "description": "Price amount as whole number in cents (100 means 1.00 eur)",
                        "example": "100"
                    },
                    "currency": {
                        "type": "string",
                        "description": "Price currency",
                        "example": "EUR"
                    },
                    "execution": {
                        "type": "string",
                        "description": "If true, price is upfront and should be paid before service is provided",
                        "enum": [
                            "upfront",
                            "later",
                            "dummy"
                        ]
                    },
                    "displayType": {
                        "type": "string",
                        "description": "Type of discount UI representation",
                        "enum": [
                            "PERCENTAGE",
                            "ABSOLUTE",
                            "FULL_PRICE"
                        ]
                    }
                },
                "required": [
                    "amount",
                    "currency",
                    "displayType"
                ]
            },
            "DepositConversionDto": {
                "type": "object",
                "properties": {
                    "deposit": {
                        "$ref": "#/components/schemas/PriceDto"
                    },
                    "charge": {
                        "$ref": "#/components/schemas/PriceDto"
                    },
                    "discountDisplayType": {
                        "type": "string",
                        "description": "Type of discount UI representation",
                        "enum": [
                            "PERCENTAGE",
                            "ABSOLUTE",
                            "FULL_PRICE"
                        ]
                    },
                    "banner": {
                        "$ref": "#/components/schemas/DepositConversionBannerDto"
                    },
                    "id": {
                        "type": "number"
                    },
                    "order": {
                        "type": "number"
                    },
                    "discount": {
                        "$ref": "#/components/schemas/DepositConversionDiscountDto"
                    },
                    "valid": {
                        "$ref": "#/components/schemas/DateIntervalDto"
                    }
                },
                "required": [
                    "deposit",
                    "charge",
                    "id",
                    "order",
                    "valid"
                ]
            },
            "CreateDepositConversionDto": {
                "type": "object",
                "properties": {
                    "deposit": {
                        "$ref": "#/components/schemas/PriceDto"
                    },
                    "charge": {
                        "$ref": "#/components/schemas/PriceDto"
                    },
                    "discountDisplayType": {
                        "type": "string",
                        "description": "Type of discount UI representation",
                        "enum": [
                            "PERCENTAGE",
                            "ABSOLUTE",
                            "FULL_PRICE"
                        ]
                    },
                    "banner": {
                        "$ref": "#/components/schemas/DepositConversionBannerDto"
                    }
                },
                "required": [
                    "deposit",
                    "charge"
                ]
            },
            "EPricingRule": {
                "type": "string",
                "enum": [
                    "TIME",
                    "OCCUPANCY"
                ]
            },
            "PricingRuleDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/EPricingRule"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "metadata": {
                        "type": "object"
                    },
                    "order": {
                        "type": "number"
                    },
                    "id": {
                        "type": "number"
                    }
                },
                "required": [
                    "name",
                    "enabled",
                    "metadata",
                    "order",
                    "id"
                ]
            },
            "CreatePricingRuleDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/EPricingRule"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "metadata": {
                        "type": "object"
                    },
                    "order": {
                        "type": "number"
                    }
                },
                "required": [
                    "name",
                    "enabled",
                    "metadata",
                    "order"
                ]
            },
            "DailyOccurrenceDto": {
                "type": "object",
                "properties": {
                    "fromTime": {
                        "type": "string"
                    },
                    "toTime": {
                        "type": "string"
                    },
                    "toDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "fromTime",
                    "toTime"
                ]
            },
            "DailyAtOccurrenceDto": {
                "type": "object",
                "properties": {
                    "hour": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "minute": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "EDay": {
                "type": "string",
                "description": "Days of week",
                "enum": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri",
                    "sat",
                    "sun"
                ]
            },
            "TimeIntervalDto": {
                "type": "object",
                "properties": {
                    "fromTime": {
                        "type": "string"
                    },
                    "toTime": {
                        "type": "string"
                    }
                },
                "required": [
                    "fromTime",
                    "toTime"
                ]
            },
            "WeeklyOccurrenceDto": {
                "type": "object",
                "properties": {
                    "days": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EDay"
                        }
                    },
                    "eachDayAt": {
                        "description": "Time interval within a day",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TimeIntervalDto"
                            }
                        ]
                    },
                    "toDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "days",
                    "eachDayAt"
                ]
            },
            "MonthlyOccurrenceDto": {
                "type": "object",
                "properties": {
                    "days": {
                        "description": "Days of month",
                        "type": "array",
                        "items": {
                            "type": "array",
                            "minimum": 1
                        }
                    },
                    "eachDayAt": {
                        "description": "Time interval within a day",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TimeIntervalDto"
                            }
                        ]
                    },
                    "toDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "days",
                    "eachDayAt"
                ]
            },
            "OccurrenceDto": {
                "type": "object",
                "properties": {
                    "now": {
                        "type": "boolean",
                        "description": "Start immediately"
                    },
                    "oneTime": {
                        "description": "One-time interval",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateIntervalDto"
                            }
                        ]
                    },
                    "oneTimeAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "One-time date"
                    },
                    "daily": {
                        "description": "Specified interval per each day",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DailyOccurrenceDto"
                            }
                        ]
                    },
                    "dailyAt": {
                        "description": "Each day at specified time",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DailyAtOccurrenceDto"
                            }
                        ]
                    },
                    "weekly": {
                        "description": "Sharing that repeats on specified days at specified times",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WeeklyOccurrenceDto"
                            }
                        ]
                    },
                    "monthly": {
                        "$ref": "#/components/schemas/MonthlyOccurrenceDto"
                    },
                    "everyXMinutes": {
                        "type": "number"
                    },
                    "valid": {
                        "$ref": "#/components/schemas/DateIntervalDto"
                    }
                }
            },
            "UnitPriceDto": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "number",
                        "description": "Price amount as whole number in cents (100 means 1.00 eur)",
                        "example": "100"
                    },
                    "currency": {
                        "type": "string",
                        "description": "Price currency",
                        "example": "EUR"
                    },
                    "execution": {
                        "type": "string",
                        "description": "If true, price is upfront and should be paid before service is provided",
                        "enum": [
                            "upfront",
                            "later",
                            "dummy"
                        ]
                    },
                    "unit": {
                        "type": "string",
                        "description": "Unit for which price should be applied for",
                        "enum": [
                            "hour",
                            "parking",
                            "block"
                        ],
                        "example": "hour"
                    }
                },
                "required": [
                    "amount",
                    "currency",
                    "unit"
                ]
            },
            "DiscountDto": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "number",
                        "description": "Price amount as whole number in cents (100 means 1.00 eur)",
                        "example": "100"
                    },
                    "currency": {
                        "type": "string",
                        "description": "Price currency",
                        "example": "EUR"
                    },
                    "execution": {
                        "type": "string",
                        "description": "If true, price is upfront and should be paid before service is provided",
                        "enum": [
                            "upfront",
                            "later",
                            "dummy"
                        ]
                    }
                },
                "required": [
                    "amount",
                    "currency"
                ]
            },
            "CreateSlotSharingTemplateResDto": {
                "type": "object",
                "properties": {
                    "occurrence": {
                        "description": "Defines repeating sharings",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OccurrenceDto"
                            }
                        ]
                    },
                    "price": {
                        "$ref": "#/components/schemas/UnitPriceDto"
                    },
                    "discount": {
                        "description": "Discount if whole slot session is reserved",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DiscountDto"
                            }
                        ]
                    },
                    "lotId": {
                        "type": "number"
                    },
                    "isPayAsGo": {
                        "type": "boolean"
                    },
                    "zoneId": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "slotId": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "groupId": {
                        "type": "number"
                    },
                    "id": {
                        "type": "number"
                    },
                    "source": {
                        "type": "object"
                    }
                },
                "required": [
                    "occurrence",
                    "price",
                    "isPayAsGo",
                    "id",
                    "source"
                ]
            },
            "CreateSlotSharingTemplateReqDto": {
                "type": "object",
                "properties": {
                    "occurrence": {
                        "description": "Defines repeating sharings",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OccurrenceDto"
                            }
                        ]
                    },
                    "price": {
                        "$ref": "#/components/schemas/UnitPriceDto"
                    },
                    "discount": {
                        "description": "Discount if whole slot session is reserved",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DiscountDto"
                            }
                        ]
                    },
                    "lotId": {
                        "type": "number"
                    },
                    "isPayAsGo": {
                        "type": "boolean"
                    },
                    "zoneId": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "slotId": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "groupId": {
                        "type": "number"
                    }
                },
                "required": [
                    "occurrence",
                    "price",
                    "isPayAsGo"
                ]
            },
            "SearchResultNodeDto": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Defines what entity type this data represents"
                    },
                    "id": {
                        "type": "number",
                        "description": "Entity id"
                    },
                    "name": {
                        "type": "string",
                        "description": "Entity name"
                    },
                    "address": {
                        "type": "string",
                        "description": "Parking lot address"
                    },
                    "interval": {
                        "description": "Sharing interval",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateIntervalDto"
                            }
                        ]
                    },
                    "priceFrom": {
                        "description": "Min price to be charged for an hour of sharing",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UnitPriceDto"
                            }
                        ]
                    },
                    "freeSpotsCount": {
                        "type": "number",
                        "description": "Free spot count"
                    },
                    "children": {
                        "description": "Free spot count",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SearchResultNodeDto"
                        }
                    },
                    "isRecent": {
                        "type": "boolean"
                    },
                    "location": {
                        "description": "Location of the lot, can be nullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LocationDto"
                            }
                        ]
                    }
                },
                "required": [
                    "type",
                    "id",
                    "name",
                    "address",
                    "interval",
                    "priceFrom",
                    "freeSpotsCount",
                    "children",
                    "isRecent",
                    "location"
                ]
            },
            "FindParkingBlocksResDto": {
                "type": "object",
                "properties": {
                    "searchSuggestions": {
                        "description": "Suggestions for search input.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sharingsNearBy": {
                        "description": "Nearby sharings if location was provided in request.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SearchResultNodeDto"
                            }
                        ]
                    },
                    "sharingsRecent": {
                        "description": "Recent parking used.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SearchResultNodeDto"
                            }
                        ]
                    },
                    "sharings": {
                        "description": "Find sharings according to search criteria.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SearchResultNodeDto"
                            }
                        ]
                    }
                },
                "required": [
                    "sharingsNearBy",
                    "sharingsRecent",
                    "sharings"
                ]
            },
            "PriceRangeDto": {
                "type": "object",
                "properties": {
                    "minAmount": {
                        "type": "number",
                        "description": "Price amount as whole number in cents (100 means 1.00 eur)",
                        "example": "100"
                    },
                    "maxAmount": {
                        "type": "number",
                        "description": "Price amount as whole number in cents (100 means 1.00 eur)",
                        "example": "100"
                    },
                    "currency": {
                        "type": "string",
                        "description": "Price currency",
                        "example": "EUR"
                    }
                },
                "required": [
                    "minAmount",
                    "maxAmount",
                    "currency"
                ]
            },
            "SearchFilterOptionsDto": {
                "type": "object",
                "properties": {
                    "blocks": {
                        "description": "Instant blocks",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "priceRange": {
                        "description": "Price range",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PriceRangeDto"
                            }
                        ]
                    },
                    "engineTypes": {
                        "description": "Engine types",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "vehicleTypes": {
                        "description": "Vehicle types",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "lotTypes": {
                        "description": "Lot types",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "description": "Tags",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "blocks",
                    "priceRange",
                    "engineTypes",
                    "vehicleTypes",
                    "lotTypes",
                    "tags"
                ]
            },
            "UpdateReservationRequestDto": {
                "type": "object",
                "properties": {
                    "confirm": {
                        "description": "List of reservation request ids to confirm",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rollback": {
                        "description": "List of reservation request ids to rollback",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "commit": {
                        "description": "List of reservation request ids to commit",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "EIncidentName": {
                "type": "string",
                "enum": [
                    "INVALID_LOGIN",
                    "WRONG_PARKING_IDENTITY",
                    "RESERVATION_SESSION",
                    "UNKNOWN_SENSOR",
                    "IPERMIT_REQUIRED",
                    "GATE_LIMIT_COUNTER"
                ]
            },
            "IncidentRuleDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/EIncidentName"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "metadata": {
                        "type": "object"
                    },
                    "groupId": {
                        "type": "number"
                    },
                    "id": {
                        "type": "number"
                    }
                },
                "required": [
                    "name",
                    "enabled",
                    "metadata",
                    "groupId",
                    "id"
                ]
            },
            "CreateIncidentRuleDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/EIncidentName"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "metadata": {
                        "type": "object"
                    },
                    "groupId": {
                        "type": "number"
                    }
                },
                "required": [
                    "name",
                    "enabled",
                    "metadata",
                    "groupId"
                ]
            },
            "IncidentReservationDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "status": {
                        "type": "string"
                    },
                    "licencePlate": {
                        "type": "string"
                    },
                    "interval": {
                        "$ref": "#/components/schemas/DateIntervalDto"
                    }
                },
                "required": [
                    "id",
                    "status",
                    "licencePlate",
                    "interval"
                ]
            },
            "IncidentSessionDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "interval": {
                        "$ref": "#/components/schemas/DateIntervalDto"
                    },
                    "permitCards": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "id",
                    "interval",
                    "permitCards"
                ]
            },
            "IncidentVehicleDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "name": {
                        "type": "number"
                    },
                    "licencePlate": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "licencePlate"
                ]
            },
            "IncidentSlotDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "IncidentTableDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string",
                        "enum": [
                            "INVALID_LOGIN",
                            "WRONG_PARKING_IDENTITY",
                            "RESERVATION_SESSION",
                            "UNKNOWN_SENSOR",
                            "IPERMIT_REQUIRED",
                            "GATE_LIMIT_COUNTER"
                        ]
                    },
                    "serial": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "object"
                    },
                    "groupId": {
                        "type": "number"
                    },
                    "userId": {
                        "type": "number"
                    },
                    "happenedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "reservation": {
                        "$ref": "#/components/schemas/IncidentReservationDto"
                    },
                    "session": {
                        "$ref": "#/components/schemas/IncidentSessionDto"
                    },
                    "vehicle": {
                        "$ref": "#/components/schemas/IncidentVehicleDto"
                    },
                    "slot": {
                        "$ref": "#/components/schemas/IncidentSlotDto"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "serial",
                    "metadata",
                    "groupId",
                    "userId",
                    "happenedAt",
                    "createdAt",
                    "reservation",
                    "session",
                    "vehicle",
                    "slot"
                ]
            },
            "TableData": {
                "type": "object",
                "properties": {}
            },
            "BindBlockDto": {
                "type": "object",
                "properties": {
                    "blockId": {
                        "type": "number",
                        "description": "Block to be binded"
                    },
                    "interval": {
                        "$ref": "#/components/schemas/DateIntervalDto"
                    }
                },
                "required": [
                    "blockId"
                ]
            },
            "SlotBlock": {
                "type": "object",
                "properties": {}
            },
            "ChangeReservationDto": {
                "type": "object",
                "properties": {
                    "blockIdA": {
                        "type": "number"
                    },
                    "blockIdB": {
                        "type": "number"
                    }
                },
                "required": [
                    "blockIdA",
                    "blockIdB"
                ]
            },
            "BlockActionDto": {
                "type": "object",
                "properties": {
                    "changeInterval": {
                        "$ref": "#/components/schemas/ChangeIntervalDto"
                    },
                    "switchReservations": {
                        "$ref": "#/components/schemas/ChangeReservationDto"
                    },
                    "acquireBlock": {
                        "type": "object"
                    }
                }
            },
            "UserLotDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "company": {
                        "type": "object"
                    },
                    "groupId": {
                        "type": "number"
                    },
                    "branchId": {
                        "type": "string"
                    },
                    "timezone": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "address",
                    "company",
                    "groupId",
                    "branchId",
                    "timezone"
                ]
            },
            "LotDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "location": {
                        "$ref": "#/components/schemas/LocationDto"
                    },
                    "timezone": {
                        "type": "string"
                    },
                    "cover": {
                        "type": "string"
                    },
                    "opened": {
                        "$ref": "#/components/schemas/TimeIntervalDto"
                    },
                    "cityZone": {
                        "type": "string"
                    },
                    "gateAdapter": {
                        "type": "string"
                    },
                    "facilityId": {
                        "type": "number"
                    },
                    "id": {
                        "type": "number"
                    },
                    "address": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "location",
                    "timezone",
                    "id",
                    "address"
                ]
            },
            "CreateSensorDto": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "NOT_CALIBRATED",
                            "ACTIVE",
                            "IDLE",
                            "DISABLED"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "SPOT_XL_LORA",
                            "SPOT_XL_NBIOT",
                            "SPOT_MINI",
                            "FLIP_DOT"
                        ]
                    },
                    "producer": {
                        "type": "string"
                    },
                    "serial": {
                        "type": "string"
                    },
                    "slotId": {
                        "type": "number"
                    },
                    "groupId": {
                        "type": "number"
                    }
                },
                "required": [
                    "serial"
                ]
            },
            "UpdateSensorDto": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "NOT_CALIBRATED",
                            "ACTIVE",
                            "IDLE",
                            "DISABLED"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "SPOT_XL_LORA",
                            "SPOT_XL_NBIOT",
                            "SPOT_MINI",
                            "FLIP_DOT"
                        ]
                    },
                    "producer": {
                        "type": "string"
                    }
                }
            },
            "AddressDto": {
                "type": "object",
                "properties": {
                    "state": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "district": {
                        "type": "string",
                        "nullable": true
                    },
                    "street": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "zipCode": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "UpdateLotDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "address": {
                        "$ref": "#/components/schemas/AddressDto"
                    },
                    "location": {
                        "$ref": "#/components/schemas/LocationDto"
                    },
                    "timezone": {
                        "type": "string"
                    },
                    "cover": {
                        "type": "string"
                    },
                    "opened": {
                        "$ref": "#/components/schemas/TimeIntervalDto"
                    },
                    "cityZone": {
                        "type": "string"
                    },
                    "gateAdapter": {
                        "type": "string"
                    },
                    "facilityId": {
                        "type": "number"
                    },
                    "id": {
                        "type": "number"
                    }
                },
                "required": [
                    "name",
                    "address",
                    "location",
                    "timezone",
                    "id"
                ]
            },
            "CreateLotDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "address": {
                        "$ref": "#/components/schemas/AddressDto"
                    },
                    "location": {
                        "$ref": "#/components/schemas/LocationDto"
                    },
                    "timezone": {
                        "type": "string"
                    },
                    "cover": {
                        "type": "string"
                    },
                    "opened": {
                        "$ref": "#/components/schemas/TimeIntervalDto"
                    },
                    "cityZone": {
                        "type": "string"
                    },
                    "gateAdapter": {
                        "type": "string"
                    },
                    "facilityId": {
                        "type": "number"
                    }
                },
                "required": [
                    "name",
                    "address",
                    "location",
                    "timezone"
                ]
            },
            "InfoLotDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "cityZone": {
                        "type": "string"
                    },
                    "timezone": {
                        "type": "string"
                    },
                    "gateAdapter": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "address",
                    "timezone"
                ]
            },
            "InfoFloorDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "level": {
                        "type": "number"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "level"
                ]
            },
            "SlotDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "vehicleType": {
                        "type": "string"
                    },
                    "slotType": {
                        "type": "string"
                    },
                    "width": {
                        "type": "number"
                    },
                    "length": {
                        "type": "number"
                    },
                    "allowIPermitCards": {
                        "type": "boolean"
                    },
                    "userId": {
                        "type": "number"
                    },
                    "lotId": {
                        "type": "number"
                    },
                    "floorId": {
                        "type": "number"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "lot": {
                        "$ref": "#/components/schemas/InfoLotDto"
                    },
                    "floor": {
                        "$ref": "#/components/schemas/InfoFloorDto"
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sensors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "priceFrom": {
                        "$ref": "#/components/schemas/UnitPriceDto"
                    },
                    "location": {
                        "$ref": "#/components/schemas/LocationDto"
                    },
                    "onStreet": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "vehicleType",
                    "slotType",
                    "width",
                    "length",
                    "allowIPermitCards",
                    "lotId",
                    "floorId",
                    "createdAt"
                ]
            }
        }
    }
}
